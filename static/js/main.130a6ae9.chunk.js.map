{"version":3,"sources":["components/Preloader/Preloader.module.css","components/Header/Header.js","components/About/About.js","components/PortfolioItem/PortfolioItem.js","components/ContactForm/ContactForm.js","img/screenshots/reactt.jpg","works.js","pages/home/index.js","components/Preloader/ZKZx.gif","components/Preloader/Preloader.jsx","pages/project/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","className","to","brand","About","title","children","PortfolioItem","work","id","src","screenshot","alt","ContactForm","state","email","emailError","offer","offerError","emailChangeHandler","event","target","value","setState","offerChangeHandler","submitHandler","preventDefault","onSubmit","this","onChange","placeholder","rows","type","Component","react","description","link","stack","HomePage","closed","works","map","onClick","openForm","closeForm","React","Preloader","style","text","gif","img","ProjectPage","project","error","match","params","setTimeout","find","join","href","App","path","component","exact","Boolean","window","location","hostname","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.130a6ae9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Preloader_img__dbT88\",\"text\":\"Preloader_text__2usxp\"};","import React from 'react';\r\nimport './Header.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className='header'>\r\n            <div className='container'>\r\n                <Link to='/' className='header-brand'>\r\n                    {props.brand}\r\n                </Link>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './About.css';\r\n\r\nfunction About(props) {\r\n    return (\r\n        <div className='about'>\r\n            <div className='about__bg'></div>\r\n            <div className='container'>\r\n                <h1 className='about__title'>{props.title}</h1>\r\n                <div className='about__description'>{props.children}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport './PortfolioItem.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction PortfolioItem({ work }) {\r\n    return (\r\n        <Link to={`/project/${work.id}`} className='portfolio-item'>\r\n            <img\r\n                className='portfolio-item__screenshot'\r\n                src={work.screenshot}\r\n                alt={work.title}\r\n            />\r\n            <div className='portfolio-item__title'>{work.title}</div>\r\n        </Link>\r\n    );\r\n}\r\n\r\nexport default PortfolioItem;","import React, { Component } from 'react';\r\nimport './ContactForm.css';\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        email: '',\r\n        emailError: null,\r\n        offer: '',\r\n        offerError: null\r\n    };\r\n\r\n    emailChangeHandler = event => {\r\n        const email = event.target.value;\r\n        this.setState({\r\n            email,\r\n            emailError: !email\r\n        });\r\n    };\r\n\r\n    offerChangeHandler = event => {\r\n        const offer = event.target.value;\r\n        this.setState({\r\n            offer,\r\n            offerError: !offer\r\n        });\r\n    };\r\n\r\n    submitHandler = event => {\r\n        event.preventDefault();\r\n\r\n        const { email, offer } = this.state;\r\n\r\n        if (email && offer) {\r\n            this.setState({\r\n                email: '',\r\n                emailError: false,\r\n                offer: '',\r\n                offerError: false\r\n            });\r\n            this.props.onSubmit();\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            emailError: !email,\r\n            offerError: !offer\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { email, emailError, offer, offerError } = this.state;\r\n\r\n        return (\r\n            <form className='contact-form' onSubmit={this.submitHandler}>\r\n                <div className='contact-form__field'>\r\n                    <input\r\n                        value={email}\r\n                        onChange={this.emailChangeHandler}\r\n                        placeholder='Email для связи'\r\n                    />\r\n                    {emailError ? (\r\n                        <div className='error'>Заполните поле</div>\r\n                    ) : null}\r\n                </div>\r\n                <div className='contact-form__field'>\r\n                    <textarea\r\n                        rows='10'\r\n                        value={offer}\r\n                        onChange={this.offerChangeHandler}\r\n                        placeholder='Ваше предложение'\r\n                    ></textarea>\r\n                    {offerError ? (\r\n                        <div className='error'>Заполните поле</div>\r\n                    ) : null}\r\n                </div>\r\n                <button className='button' type='submit'>\r\n                    Отправить\r\n                </button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ContactForm;","export default __webpack_public_path__ + \"static/media/reactt.c8b80738.jpg\";","import react from './img/screenshots/reactt.jpg';\r\n\r\nexport default [\r\n    {\r\n        id: 'spa-1',\r\n        title: 'SPA #1',\r\n        screenshot: react,\r\n        description: 'Первый проект Demo Social Network(ещё не доведен до конца)',\r\n        link: 'https://github.com/BaichorovNory/social-network-demo',\r\n        stack: ['react', 'redux']\r\n    },\r\n\r\n    {\r\n        id: 'spa-2',\r\n        title: 'SPA #2',\r\n        screenshot: react,\r\n        description: 'Второй проект Search Film',\r\n        link: 'https://github.com/BaichorovNory/Search-Film',\r\n        stack: ['react', 'axios']\r\n    }\r\n];","import React from 'react';\r\nimport About from '../../components/About/About';\r\nimport PortfolioItem from '../../components/PortfolioItem/PortfolioItem';\r\nimport ContactForm from '../../components/ContactForm/ContactForm';\r\nimport works from '../../works';\r\n\r\nclass HomePage extends React.Component {\r\n    state = {\r\n        closed: true,\r\n    };\r\n\r\n    openForm() {\r\n        this.setState({\r\n            closed: false,\r\n        });\r\n    }\r\n\r\n    closeForm() {\r\n        this.setState({\r\n            closed: true,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <About title='React-разработчик Норий Байчоров'>\r\n                    <p>\r\n                        Разрабатываю на лучшей UI библиотеке лучшие SPA!\r\n                    </p>\r\n                    <p>Могу и вам что-нибудь разработать )</p>\r\n                </About>\r\n                <div className='portfolio'>\r\n                    <div className='container'>\r\n                        {works.map((work) => (\r\n                            <PortfolioItem key={work.id} work={work} />\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                <div className='contacts'>\r\n                    <div className='container'>\r\n                        {this.state.closed ? (\r\n                            <button\r\n                                className='button'\r\n                                onClick={() => this.openForm()}\r\n                            >\r\n                                Напишите мне\r\n                            </button>\r\n                        ) : (\r\n                            <div>\r\n                                <hr />\r\n                                <ContactForm\r\n                                    onSubmit={() => this.closeForm()}\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default HomePage;","export default __webpack_public_path__ + \"static/media/ZKZx.4ace5f17.gif\";","import React from 'react';\r\nimport gif from './ZKZx.gif';\r\nimport style from './Preloader.module.css'\r\n\r\nconst Preloader = () => {\r\n    return <div className={style.text}>Загрузка, пожалуйста подождите...<img src={gif} alt='' className={style.img} /></div>;\r\n};\r\n\r\nexport default Preloader;","import './index.css';\r\nimport React from 'react';\r\nimport works from '../../works';\r\nimport Preloader from '../../components/Preloader/Preloader'\r\n\r\nclass ProjectPage extends React.Component {\r\n    state = {\r\n        project: null,\r\n        error: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        const id = this.props.match.params.id;\r\n        setTimeout(() => {\r\n            const project = works.find(work => work.id === id);\r\n\r\n            this.setState({\r\n                project: project,\r\n                error: !project\r\n            });\r\n        }, 1000);\r\n    }\r\n\r\n    render() {\r\n        const { project, error } = this.state;\r\n\r\n        if (error)\r\n            return <div className='container'>Что-то пошло не так...</div>;\r\n\r\n        if (!project) return <div className='container'><Preloader /></div>;\r\n\r\n        return (\r\n            <div className='project'>\r\n                <div className='container'>\r\n                    <img\r\n                        className='project__screenshot'\r\n                        src={project.screenshot}\r\n                        alt={project.title}\r\n                    />\r\n\r\n                    <h1 className='project__title'>{project.title}</h1>\r\n\r\n                    <p className='project__description'>\r\n                        {project.description}\r\n                    </p>\r\n\r\n                    <div className='project__stack'>\r\n                        {project.stack.join(', ')}\r\n                    </div>\r\n\r\n                    <div>\r\n                        <a href={project.link} className='project__link'>\r\n                            Ссылка на проект\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProjectPage;","import React from 'react';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport HomePage from './pages/home';\nimport ProjectPage from './pages/project';\n\nclass App extends React.Component {\n    render() {\n        return (\n            <div className='app'>\n                <Header brand='Норий Байчоров'></Header>\n                <main className='main'>\n                    <Switch>\n                        <Route path='/project/:id' component={ProjectPage} />\n                        <Route exact path='/' component={HomePage} />\n                        <Redirect to='/' />\n                    </Switch>\n                </main>\n            </div>\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.0/8 are considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n      headers: { 'Service-Worker': 'script' }\r\n    })\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready.then(registration => {\r\n        registration.unregister();\r\n      });\r\n    }\r\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\n\nconst app = (\n    <HashRouter>\n        <App />\n    </HashRouter>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}